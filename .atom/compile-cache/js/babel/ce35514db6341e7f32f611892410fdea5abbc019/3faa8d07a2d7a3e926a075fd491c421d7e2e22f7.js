
"use strict";

var keywordSets = require("../reference/keywordSets");
var isNumbery = require("./isNumbery");
var isStandardSyntaxValue = require("./isStandardSyntaxValue");
var isValidFontSize = require("./isValidFontSize");
var isVariable = require("./isVariable");
var postcssValueParser = require("postcss-value-parser");

var nodeTypesToCheck = new Set(["word", "string", "space", "div"]);

function joinValueNodes(firstNode, secondNode, charactersBetween) {
  firstNode.value = firstNode.value + charactersBetween + secondNode.value;

  return firstNode;
}

/**
 * Get the font-families within a `font` shorthand property value.
 *
 * @param {string} value
 * @return {object} Collection font-family nodes
 */
module.exports = function findFontFamily(value /*: string*/) /*: Array<Object>*/{
  var fontFamilies = [];

  var valueNodes = postcssValueParser(value);

  // Handle `inherit`, `initial` and etc
  if (valueNodes.nodes.length === 1 && keywordSets.basicKeywords.has(valueNodes.nodes[0].value.toLowerCase())) {
    return [valueNodes.nodes[0]];
  }

  var needMergeNodesByValue = false;
  var mergeCharacters = null;

  valueNodes.walk(function (valueNode, index, nodes) {
    if (valueNode.type === "function") {
      return false;
    }
    if (!nodeTypesToCheck.has(valueNode.type)) {
      return;
    }

    var valueLowerCase = valueNode.value.toLowerCase();

    // Ignore non standard syntax
    if (!isStandardSyntaxValue(valueLowerCase)) {
      return;
    }

    // Ignore variables
    if (isVariable(valueLowerCase)) {
      return;
    }

    // Ignore keywords for other font parts
    if (keywordSets.fontShorthandKeywords.has(valueLowerCase) && !keywordSets.fontFamilyKeywords.has(valueLowerCase)) {
      return;
    }

    // Ignore font-sizes
    if (isValidFontSize(valueNode.value)) {
      return;
    }

    // Ignore anything come after a <font-size>/, because it's a line-height
    if (nodes[index - 1] && nodes[index - 1].value === "/" && nodes[index - 2] && isValidFontSize(nodes[index - 2].value)) {
      return;
    }

    // Ignore number values
    if (isNumbery(valueLowerCase)) {
      return;
    }

    // Detect when a space or comma is dividing a list of font-families, and save the joining character.
    if ((valueNode.type === "space" || valueNode.type === "div" && valueNode.value !== ",") && fontFamilies.length !== 0) {
      needMergeNodesByValue = true;
      mergeCharacters = valueNode.value;
      return;
    } else if (valueNode.type === "space" || valueNode.type === "div") {
      return;
    }

    var fontFamily = valueNode;

    if (needMergeNodesByValue) {
      joinValueNodes(fontFamilies[fontFamilies.length - 1], valueNode, mergeCharacters);
      needMergeNodesByValue = false;
      mergeCharacters = null;
    } else {
      fontFamilies.push(fontFamily);
    }
  });

  return fontFamilies;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvZmluZEZvbnRGYW1pbHkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLFlBQVksQ0FBQTs7QUFFWixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQTtBQUN2RCxJQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUE7QUFDeEMsSUFBTSxxQkFBcUIsR0FBRyxPQUFPLENBQUMseUJBQXlCLENBQUMsQ0FBQTtBQUNoRSxJQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtBQUNwRCxJQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUE7QUFDMUMsSUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQTs7QUFFMUQsSUFBTSxnQkFBZ0IsR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBRSxDQUFDLENBQUE7O0FBRXRFLFNBQVMsY0FBYyxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsaUJBQWlCLEVBQUU7QUFDaEUsV0FBUyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsS0FBSyxHQUFHLGlCQUFpQixHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUE7O0FBRXhFLFNBQU8sU0FBUyxDQUFBO0NBQ2pCOzs7Ozs7OztBQVFELE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxjQUFjLENBQUMsS0FBSyxrQ0FBaUM7QUFDN0UsTUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFBOztBQUV2QixNQUFNLFVBQVUsR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQTs7O0FBRzVDLE1BQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLFdBQVcsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUU7QUFDM0csV0FBTyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtHQUM3Qjs7QUFFRCxNQUFJLHFCQUFxQixHQUFHLEtBQUssQ0FBQTtBQUNqQyxNQUFJLGVBQWUsR0FBRyxJQUFJLENBQUE7O0FBRTFCLFlBQVUsQ0FBQyxJQUFJLENBQUMsVUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBSztBQUMzQyxRQUFJLFNBQVMsQ0FBQyxJQUFJLEtBQUssVUFBVSxFQUFFO0FBQ2pDLGFBQU8sS0FBSyxDQUFBO0tBQ2I7QUFDRCxRQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtBQUN6QyxhQUFNO0tBQ1A7O0FBRUQsUUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQTs7O0FBR3BELFFBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLENBQUMsRUFBRTtBQUMxQyxhQUFNO0tBQ1A7OztBQUdELFFBQUksVUFBVSxDQUFDLGNBQWMsQ0FBQyxFQUFFO0FBQzlCLGFBQU07S0FDUDs7O0FBR0QsUUFBSSxXQUFXLENBQUMscUJBQXFCLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsRUFBRTtBQUNoSCxhQUFNO0tBQ1A7OztBQUdELFFBQUksZUFBZSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUNwQyxhQUFNO0tBQ1A7OztBQUdELFFBQUksS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxHQUFHLElBQUksS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRTtBQUNySCxhQUFNO0tBQ1A7OztBQUdELFFBQUksU0FBUyxDQUFDLGNBQWMsQ0FBQyxFQUFFO0FBQzdCLGFBQU07S0FDUDs7O0FBR0QsUUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEtBQUssT0FBTyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEtBQUssS0FBSyxJQUFJLFNBQVMsQ0FBQyxLQUFLLEtBQUssR0FBRyxDQUFBLElBQUssWUFBWSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7QUFDcEgsMkJBQXFCLEdBQUcsSUFBSSxDQUFBO0FBQzVCLHFCQUFlLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQTtBQUNqQyxhQUFNO0tBQ1AsTUFBTSxJQUFJLFNBQVMsQ0FBQyxJQUFJLEtBQUssT0FBTyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEtBQUssS0FBSyxFQUFFO0FBQ2pFLGFBQU07S0FDUDs7QUFFRCxRQUFNLFVBQVUsR0FBRyxTQUFTLENBQUE7O0FBRTVCLFFBQUkscUJBQXFCLEVBQUU7QUFDekIsb0JBQWMsQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUE7QUFDakYsMkJBQXFCLEdBQUcsS0FBSyxDQUFBO0FBQzdCLHFCQUFlLEdBQUcsSUFBSSxDQUFBO0tBQ3ZCLE1BQU07QUFDTCxrQkFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQTtLQUM5QjtHQUNGLENBQUMsQ0FBQTs7QUFFRixTQUFPLFlBQVksQ0FBQTtDQUNwQixDQUFBIiwiZmlsZSI6Ii9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvZmluZEZvbnRGYW1pbHkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXCJ1c2Ugc3RyaWN0XCJcblxuY29uc3Qga2V5d29yZFNldHMgPSByZXF1aXJlKFwiLi4vcmVmZXJlbmNlL2tleXdvcmRTZXRzXCIpXG5jb25zdCBpc051bWJlcnkgPSByZXF1aXJlKFwiLi9pc051bWJlcnlcIilcbmNvbnN0IGlzU3RhbmRhcmRTeW50YXhWYWx1ZSA9IHJlcXVpcmUoXCIuL2lzU3RhbmRhcmRTeW50YXhWYWx1ZVwiKVxuY29uc3QgaXNWYWxpZEZvbnRTaXplID0gcmVxdWlyZShcIi4vaXNWYWxpZEZvbnRTaXplXCIpXG5jb25zdCBpc1ZhcmlhYmxlID0gcmVxdWlyZShcIi4vaXNWYXJpYWJsZVwiKVxuY29uc3QgcG9zdGNzc1ZhbHVlUGFyc2VyID0gcmVxdWlyZShcInBvc3Rjc3MtdmFsdWUtcGFyc2VyXCIpXG5cbmNvbnN0IG5vZGVUeXBlc1RvQ2hlY2sgPSBuZXcgU2V0KFsgXCJ3b3JkXCIsIFwic3RyaW5nXCIsIFwic3BhY2VcIiwgXCJkaXZcIiBdKVxuXG5mdW5jdGlvbiBqb2luVmFsdWVOb2RlcyhmaXJzdE5vZGUsIHNlY29uZE5vZGUsIGNoYXJhY3RlcnNCZXR3ZWVuKSB7XG4gIGZpcnN0Tm9kZS52YWx1ZSA9IGZpcnN0Tm9kZS52YWx1ZSArIGNoYXJhY3RlcnNCZXR3ZWVuICsgc2Vjb25kTm9kZS52YWx1ZVxuXG4gIHJldHVybiBmaXJzdE5vZGVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZvbnQtZmFtaWxpZXMgd2l0aGluIGEgYGZvbnRgIHNob3J0aGFuZCBwcm9wZXJ0eSB2YWx1ZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqIEByZXR1cm4ge29iamVjdH0gQ29sbGVjdGlvbiBmb250LWZhbWlseSBub2Rlc1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZpbmRGb250RmFtaWx5KHZhbHVlLyo6IHN0cmluZyovKS8qOiBBcnJheTxPYmplY3Q+Ki8ge1xuICBjb25zdCBmb250RmFtaWxpZXMgPSBbXVxuXG4gIGNvbnN0IHZhbHVlTm9kZXMgPSBwb3N0Y3NzVmFsdWVQYXJzZXIodmFsdWUpXG5cbiAgLy8gSGFuZGxlIGBpbmhlcml0YCwgYGluaXRpYWxgIGFuZCBldGNcbiAgaWYgKHZhbHVlTm9kZXMubm9kZXMubGVuZ3RoID09PSAxICYmIGtleXdvcmRTZXRzLmJhc2ljS2V5d29yZHMuaGFzKHZhbHVlTm9kZXMubm9kZXNbMF0udmFsdWUudG9Mb3dlckNhc2UoKSkpIHtcbiAgICByZXR1cm4gW3ZhbHVlTm9kZXMubm9kZXNbMF1dXG4gIH1cblxuICBsZXQgbmVlZE1lcmdlTm9kZXNCeVZhbHVlID0gZmFsc2VcbiAgbGV0IG1lcmdlQ2hhcmFjdGVycyA9IG51bGxcblxuICB2YWx1ZU5vZGVzLndhbGsoKHZhbHVlTm9kZSwgaW5kZXgsIG5vZGVzKSA9PiB7XG4gICAgaWYgKHZhbHVlTm9kZS50eXBlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICBpZiAoIW5vZGVUeXBlc1RvQ2hlY2suaGFzKHZhbHVlTm9kZS50eXBlKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3QgdmFsdWVMb3dlckNhc2UgPSB2YWx1ZU5vZGUudmFsdWUudG9Mb3dlckNhc2UoKVxuXG4gICAgLy8gSWdub3JlIG5vbiBzdGFuZGFyZCBzeW50YXhcbiAgICBpZiAoIWlzU3RhbmRhcmRTeW50YXhWYWx1ZSh2YWx1ZUxvd2VyQ2FzZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIElnbm9yZSB2YXJpYWJsZXNcbiAgICBpZiAoaXNWYXJpYWJsZSh2YWx1ZUxvd2VyQ2FzZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIElnbm9yZSBrZXl3b3JkcyBmb3Igb3RoZXIgZm9udCBwYXJ0c1xuICAgIGlmIChrZXl3b3JkU2V0cy5mb250U2hvcnRoYW5kS2V5d29yZHMuaGFzKHZhbHVlTG93ZXJDYXNlKSAmJiAha2V5d29yZFNldHMuZm9udEZhbWlseUtleXdvcmRzLmhhcyh2YWx1ZUxvd2VyQ2FzZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIC8vIElnbm9yZSBmb250LXNpemVzXG4gICAgaWYgKGlzVmFsaWRGb250U2l6ZSh2YWx1ZU5vZGUudmFsdWUpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBJZ25vcmUgYW55dGhpbmcgY29tZSBhZnRlciBhIDxmb250LXNpemU+LywgYmVjYXVzZSBpdCdzIGEgbGluZS1oZWlnaHRcbiAgICBpZiAobm9kZXNbaW5kZXggLSAxXSAmJiBub2Rlc1tpbmRleCAtIDFdLnZhbHVlID09PSBcIi9cIiAmJiBub2Rlc1tpbmRleCAtIDJdICYmIGlzVmFsaWRGb250U2l6ZShub2Rlc1tpbmRleCAtIDJdLnZhbHVlKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gSWdub3JlIG51bWJlciB2YWx1ZXNcbiAgICBpZiAoaXNOdW1iZXJ5KHZhbHVlTG93ZXJDYXNlKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gRGV0ZWN0IHdoZW4gYSBzcGFjZSBvciBjb21tYSBpcyBkaXZpZGluZyBhIGxpc3Qgb2YgZm9udC1mYW1pbGllcywgYW5kIHNhdmUgdGhlIGpvaW5pbmcgY2hhcmFjdGVyLlxuICAgIGlmICgodmFsdWVOb2RlLnR5cGUgPT09IFwic3BhY2VcIiB8fCB2YWx1ZU5vZGUudHlwZSA9PT0gXCJkaXZcIiAmJiB2YWx1ZU5vZGUudmFsdWUgIT09IFwiLFwiKSAmJiBmb250RmFtaWxpZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgICBuZWVkTWVyZ2VOb2Rlc0J5VmFsdWUgPSB0cnVlXG4gICAgICBtZXJnZUNoYXJhY3RlcnMgPSB2YWx1ZU5vZGUudmFsdWVcbiAgICAgIHJldHVyblxuICAgIH0gZWxzZSBpZiAodmFsdWVOb2RlLnR5cGUgPT09IFwic3BhY2VcIiB8fCB2YWx1ZU5vZGUudHlwZSA9PT0gXCJkaXZcIikge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3QgZm9udEZhbWlseSA9IHZhbHVlTm9kZVxuXG4gICAgaWYgKG5lZWRNZXJnZU5vZGVzQnlWYWx1ZSkge1xuICAgICAgam9pblZhbHVlTm9kZXMoZm9udEZhbWlsaWVzW2ZvbnRGYW1pbGllcy5sZW5ndGggLSAxXSwgdmFsdWVOb2RlLCBtZXJnZUNoYXJhY3RlcnMpXG4gICAgICBuZWVkTWVyZ2VOb2Rlc0J5VmFsdWUgPSBmYWxzZVxuICAgICAgbWVyZ2VDaGFyYWN0ZXJzID0gbnVsbFxuICAgIH0gZWxzZSB7XG4gICAgICBmb250RmFtaWxpZXMucHVzaChmb250RmFtaWx5KVxuICAgIH1cbiAgfSlcblxuICByZXR1cm4gZm9udEZhbWlsaWVzXG59XG4iXX0=