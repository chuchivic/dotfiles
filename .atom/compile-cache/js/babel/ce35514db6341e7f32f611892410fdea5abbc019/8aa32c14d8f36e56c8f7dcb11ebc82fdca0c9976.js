
"use strict";
var _ = require("lodash");
var createStylelint = require("./createStylelint");
var path = require("path");
var postcss = require("postcss");

module.exports = postcss.plugin("stylelint", function (options) {
  options = options || {};

  var tailoredOptions /*: Object*/ = options.rules ? { config: options } : options;
  var stylelint = createStylelint(tailoredOptions);

  return function (root, result) {
    var filePath = options.from || _.get(root, "source.input.file");
    if (filePath !== undefined && !path.isAbsolute(filePath)) {
      filePath = path.join(process.cwd(), filePath);
    }

    return stylelint._lintSource({
      filePath: filePath,
      existingPostcssResult: result
    });
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvcG9zdGNzc1BsdWdpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsWUFBWSxDQUFDO0FBQ2IsSUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVCLElBQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3JELElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3QixJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7O0FBRW5DLE1BQU0sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsVUFBUyxPQUFPLEVBQUU7QUFDN0QsU0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7O0FBRXhCLE1BQU0sZUFBZSxnQkFBZ0IsT0FBTyxDQUFDLEtBQUssR0FDOUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQ25CLE9BQU8sQ0FBQztBQUNaLE1BQU0sU0FBUyxHQUFHLGVBQWUsQ0FBQyxlQUFlLENBQUMsQ0FBQzs7QUFFbkQsU0FBTyxVQUFDLElBQUksRUFBRSxNQUFNLEVBQUs7QUFDdkIsUUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0FBQ2hFLFFBQUksUUFBUSxLQUFLLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUU7QUFDeEQsY0FBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0tBQy9DOztBQUVELFdBQU8sU0FBUyxDQUFDLFdBQVcsQ0FBQztBQUMzQixjQUFRLEVBQVIsUUFBUTtBQUNSLDJCQUFxQixFQUFFLE1BQU07S0FDOUIsQ0FBQyxDQUFDO0dBQ0osQ0FBQztDQUNILENBQUMsQ0FBQyIsImZpbGUiOiIvaG9tZS9qZXN1cy8uYXRvbS9wYWNrYWdlcy9saW50ZXItc3R5bGVsaW50L25vZGVfbW9kdWxlcy9zdHlsZWxpbnQvbGliL3Bvc3Rjc3NQbHVnaW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcbmNvbnN0IGNyZWF0ZVN0eWxlbGludCA9IHJlcXVpcmUoXCIuL2NyZWF0ZVN0eWxlbGludFwiKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKTtcbmNvbnN0IHBvc3Rjc3MgPSByZXF1aXJlKFwicG9zdGNzc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBwb3N0Y3NzLnBsdWdpbihcInN0eWxlbGludFwiLCBmdW5jdGlvbihvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIGNvbnN0IHRhaWxvcmVkT3B0aW9ucyAvKjogT2JqZWN0Ki8gPSBvcHRpb25zLnJ1bGVzXG4gICAgPyB7IGNvbmZpZzogb3B0aW9ucyB9XG4gICAgOiBvcHRpb25zO1xuICBjb25zdCBzdHlsZWxpbnQgPSBjcmVhdGVTdHlsZWxpbnQodGFpbG9yZWRPcHRpb25zKTtcblxuICByZXR1cm4gKHJvb3QsIHJlc3VsdCkgPT4ge1xuICAgIGxldCBmaWxlUGF0aCA9IG9wdGlvbnMuZnJvbSB8fCBfLmdldChyb290LCBcInNvdXJjZS5pbnB1dC5maWxlXCIpO1xuICAgIGlmIChmaWxlUGF0aCAhPT0gdW5kZWZpbmVkICYmICFwYXRoLmlzQWJzb2x1dGUoZmlsZVBhdGgpKSB7XG4gICAgICBmaWxlUGF0aCA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCBmaWxlUGF0aCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlbGludC5fbGludFNvdXJjZSh7XG4gICAgICBmaWxlUGF0aCxcbiAgICAgIGV4aXN0aW5nUG9zdGNzc1Jlc3VsdDogcmVzdWx0XG4gICAgfSk7XG4gIH07XG59KTtcbiJdfQ==