
"use strict";

var balancedMatch = require("balanced-match");
var styleSearch = require("style-search");

/**
 * Search a CSS string for functions by name.
 * For every match, invoke the callback, passing the function's
 * "argument(s) string" (whatever is inside the parentheses)
 * as an argument.
 *
 * Callback will be called once for every matching function found,
 * with the function's "argument(s) string" and its starting index
 * as the arguments.
 */
module.exports = function (source, /*: string*/
functionName, /*: string*/
callback /*: Function*/
) {
  styleSearch({
    source: source,
    target: functionName,
    functionNames: "check"
  }, function (match) {
    if (source[match.endIndex] !== "(") {
      return;
    }
    var parensMatch = balancedMatch("(", ")", source.substr(match.startIndex));
    callback(parensMatch.body, match.endIndex + 1);
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvZnVuY3Rpb25Bcmd1bWVudHNTZWFyY2guanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLFlBQVksQ0FBQTs7QUFFWixJQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtBQUMvQyxJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUE7Ozs7Ozs7Ozs7OztBQVkzQyxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQ2YsTUFBTTtBQUNOLFlBQVk7QUFDWixRQUFRO0VBQ1I7QUFDQSxhQUFXLENBQUM7QUFDVixVQUFNLEVBQU4sTUFBTTtBQUNOLFVBQU0sRUFBRSxZQUFZO0FBQ3BCLGlCQUFhLEVBQUUsT0FBTztHQUN2QixFQUFFLFVBQUEsS0FBSyxFQUFJO0FBQ1YsUUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsRUFBRTtBQUNsQyxhQUFNO0tBQ1A7QUFDRCxRQUFNLFdBQVcsR0FBRyxhQUFhLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFBO0FBQzVFLFlBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUE7R0FDL0MsQ0FBQyxDQUFBO0NBQ0gsQ0FBQSIsImZpbGUiOiIvaG9tZS9qZXN1cy8uYXRvbS9wYWNrYWdlcy9saW50ZXItc3R5bGVsaW50L25vZGVfbW9kdWxlcy9zdHlsZWxpbnQvbGliL3V0aWxzL2Z1bmN0aW9uQXJndW1lbnRzU2VhcmNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblwidXNlIHN0cmljdFwiXG5cbmNvbnN0IGJhbGFuY2VkTWF0Y2ggPSByZXF1aXJlKFwiYmFsYW5jZWQtbWF0Y2hcIilcbmNvbnN0IHN0eWxlU2VhcmNoID0gcmVxdWlyZShcInN0eWxlLXNlYXJjaFwiKVxuXG4vKipcbiAqIFNlYXJjaCBhIENTUyBzdHJpbmcgZm9yIGZ1bmN0aW9ucyBieSBuYW1lLlxuICogRm9yIGV2ZXJ5IG1hdGNoLCBpbnZva2UgdGhlIGNhbGxiYWNrLCBwYXNzaW5nIHRoZSBmdW5jdGlvbidzXG4gKiBcImFyZ3VtZW50KHMpIHN0cmluZ1wiICh3aGF0ZXZlciBpcyBpbnNpZGUgdGhlIHBhcmVudGhlc2VzKVxuICogYXMgYW4gYXJndW1lbnQuXG4gKlxuICogQ2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgb25jZSBmb3IgZXZlcnkgbWF0Y2hpbmcgZnVuY3Rpb24gZm91bmQsXG4gKiB3aXRoIHRoZSBmdW5jdGlvbidzIFwiYXJndW1lbnQocykgc3RyaW5nXCIgYW5kIGl0cyBzdGFydGluZyBpbmRleFxuICogYXMgdGhlIGFyZ3VtZW50cy5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoXG4gIHNvdXJjZS8qOiBzdHJpbmcqLyxcbiAgZnVuY3Rpb25OYW1lLyo6IHN0cmluZyovLFxuICBjYWxsYmFjay8qOiBGdW5jdGlvbiovXG4pIHtcbiAgc3R5bGVTZWFyY2goe1xuICAgIHNvdXJjZSxcbiAgICB0YXJnZXQ6IGZ1bmN0aW9uTmFtZSxcbiAgICBmdW5jdGlvbk5hbWVzOiBcImNoZWNrXCIsXG4gIH0sIG1hdGNoID0+IHtcbiAgICBpZiAoc291cmNlW21hdGNoLmVuZEluZGV4XSAhPT0gXCIoXCIpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBjb25zdCBwYXJlbnNNYXRjaCA9IGJhbGFuY2VkTWF0Y2goXCIoXCIsIFwiKVwiLCBzb3VyY2Uuc3Vic3RyKG1hdGNoLnN0YXJ0SW5kZXgpKVxuICAgIGNhbGxiYWNrKHBhcmVuc01hdGNoLmJvZHksIG1hdGNoLmVuZEluZGV4ICsgMSlcbiAgfSlcbn1cbiJdfQ==