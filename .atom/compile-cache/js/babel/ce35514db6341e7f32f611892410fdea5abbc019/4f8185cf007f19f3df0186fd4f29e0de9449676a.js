
"use strict";
module.exports = function (statement, /*: Object*/
options /*:: ?: Object*/
) /*: string*/{
  options = options || {};

  var result = "";
  var rule = undefined; /*: postcss$rule*/
  var atRule = undefined; /*: postcss$atRule*/

  if (statement.type === "rule") {
    rule = statement;
  }
  if (statement.type === "atrule") {
    atRule = statement;
  }

  if (!rule && !atRule) {
    return result;
  }

  var before = statement.raws.before || "";

  if (!options.noRawBefore) {
    result += before;
  }
  if (rule) {
    result += rule.selector;
  }
  if (atRule) {
    result += "@" + atRule.name + (atRule.raws.afterName || "") + atRule.params;
  }

  var between = statement.raws.between;

  if (between !== undefined) {
    result += between;
  }

  return result;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvYmVmb3JlQmxvY2tTdHJpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLFlBQVksQ0FBQTtBQUNaLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFDZixTQUFTO0FBQ1QsT0FBTztjQUNLO0FBQ1osU0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUE7O0FBRXZCLE1BQUksTUFBTSxHQUFHLEVBQUUsQ0FBQTtBQUNmLE1BQUksSUFBSSxZQUFBLENBQUE7QUFDUixNQUFJLE1BQU0sWUFBQSxDQUFBOztBQUVWLE1BQUksU0FBUyxDQUFDLElBQUksS0FBSyxNQUFNLEVBQUU7QUFDN0IsUUFBSSxHQUFHLFNBQVMsQ0FBQTtHQUNqQjtBQUNELE1BQUksU0FBUyxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7QUFDL0IsVUFBTSxHQUFHLFNBQVMsQ0FBQTtHQUNuQjs7QUFFRCxNQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ3BCLFdBQU8sTUFBTSxDQUFBO0dBQ2Q7O0FBRUQsTUFBTSxNQUFNLEdBQUksU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksRUFBRSxBQUFDLENBQUE7O0FBRTVDLE1BQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFO0FBQ3hCLFVBQU0sSUFBSSxNQUFNLENBQUE7R0FDakI7QUFDRCxNQUFJLElBQUksRUFBRTtBQUNSLFVBQU0sSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFBO0dBQ3hCO0FBQ0QsTUFBSSxNQUFNLEVBQUU7QUFDVixVQUFNLElBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFBLEFBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFBO0dBQzVFOztBQUVELE1BQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFBOztBQUV0QyxNQUFJLE9BQU8sS0FBSyxTQUFTLEVBQUU7QUFDekIsVUFBTSxJQUFJLE9BQU8sQ0FBQTtHQUNsQjs7QUFFRCxTQUFPLE1BQU0sQ0FBQTtDQUNkLENBQUEiLCJmaWxlIjoiL2hvbWUvamVzdXMvLmF0b20vcGFja2FnZXMvbGludGVyLXN0eWxlbGludC9ub2RlX21vZHVsZXMvc3R5bGVsaW50L2xpYi91dGlscy9iZWZvcmVCbG9ja1N0cmluZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cInVzZSBzdHJpY3RcIlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoXG4gIHN0YXRlbWVudC8qOiBPYmplY3QqLyxcbiAgb3B0aW9ucy8qOjogPzogT2JqZWN0Ki9cbikvKjogc3RyaW5nKi8ge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIGxldCByZXN1bHQgPSBcIlwiXG4gIGxldCBydWxlLyo6IHBvc3Rjc3MkcnVsZSovXG4gIGxldCBhdFJ1bGUvKjogcG9zdGNzcyRhdFJ1bGUqL1xuXG4gIGlmIChzdGF0ZW1lbnQudHlwZSA9PT0gXCJydWxlXCIpIHtcbiAgICBydWxlID0gc3RhdGVtZW50XG4gIH1cbiAgaWYgKHN0YXRlbWVudC50eXBlID09PSBcImF0cnVsZVwiKSB7XG4gICAgYXRSdWxlID0gc3RhdGVtZW50XG4gIH1cblxuICBpZiAoIXJ1bGUgJiYgIWF0UnVsZSkge1xuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGNvbnN0IGJlZm9yZSA9IChzdGF0ZW1lbnQucmF3cy5iZWZvcmUgfHwgXCJcIilcblxuICBpZiAoIW9wdGlvbnMubm9SYXdCZWZvcmUpIHtcbiAgICByZXN1bHQgKz0gYmVmb3JlXG4gIH1cbiAgaWYgKHJ1bGUpIHtcbiAgICByZXN1bHQgKz0gcnVsZS5zZWxlY3RvclxuICB9XG4gIGlmIChhdFJ1bGUpIHtcbiAgICByZXN1bHQgKz0gXCJAXCIgKyBhdFJ1bGUubmFtZSArIChhdFJ1bGUucmF3cy5hZnRlck5hbWUgfHwgXCJcIikgKyBhdFJ1bGUucGFyYW1zXG4gIH1cblxuICBjb25zdCBiZXR3ZWVuID0gc3RhdGVtZW50LnJhd3MuYmV0d2VlblxuXG4gIGlmIChiZXR3ZWVuICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXN1bHQgKz0gYmV0d2VlblxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl19