
"use strict";

var keywordSets = require("../reference/keywordSets");
var getUnitFromValueNode = require("./getUnitFromValueNode");
var isStandardSyntaxValue = require("./isStandardSyntaxValue");
var isVariable = require("./isVariable");
var postcssValueParser = require("postcss-value-parser");

/**
 * Get the font-families within a `font` shorthand property value.
 */
module.exports = function findAnimationName(value /*: string*/) /*: Array<Object>*/{
  var animationNames = [];

  var valueNodes = postcssValueParser(value);

  // Handle `inherit`, `initial` and etc
  if (valueNodes.nodes.length === 1 && keywordSets.basicKeywords.has(valueNodes.nodes[0].value.toLowerCase())) {
    return [valueNodes.nodes[0]];
  }

  valueNodes.walk(function (valueNode) {
    if (valueNode.type === "function") {
      return false;
    }
    if (valueNode.type !== "word") {
      return;
    }

    var valueLowerCase = valueNode.value.toLowerCase();

    // Ignore non standard syntax
    if (!isStandardSyntaxValue(valueLowerCase)) {
      return;
    }
    // Ignore variables
    if (isVariable(valueLowerCase)) {
      return;
    }
    // Ignore keywords for other font parts
    if (keywordSets.animationShorthandKeywords.has(valueLowerCase)) {
      return;
    }
    // Ignore numbers with units
    var unit = getUnitFromValueNode(valueNode);
    if (unit || unit === "") {
      return;
    }

    animationNames.push(valueNode);
  });

  return animationNames;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvZmluZEFuaW1hdGlvbk5hbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLFlBQVksQ0FBQTs7QUFFWixJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsMEJBQTBCLENBQUMsQ0FBQTtBQUN2RCxJQUFNLG9CQUFvQixHQUFHLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFBO0FBQzlELElBQU0scUJBQXFCLEdBQUcsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUE7QUFDaEUsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFBO0FBQzFDLElBQU0sa0JBQWtCLEdBQUcsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUE7Ozs7O0FBSzFELE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxpQkFBaUIsQ0FBQyxLQUFLLGtDQUFpQztBQUNoRixNQUFNLGNBQWMsR0FBRyxFQUFFLENBQUE7O0FBRXpCLE1BQU0sVUFBVSxHQUFHLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFBOzs7QUFHNUMsTUFBSSxVQUFVLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksV0FBVyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRTtBQUMzRyxXQUFPLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0dBQzdCOztBQUVELFlBQVUsQ0FBQyxJQUFJLENBQUMsVUFBQSxTQUFTLEVBQUk7QUFDM0IsUUFBSSxTQUFTLENBQUMsSUFBSSxLQUFLLFVBQVUsRUFBRTtBQUNqQyxhQUFPLEtBQUssQ0FBQTtLQUNiO0FBQ0QsUUFBSSxTQUFTLENBQUMsSUFBSSxLQUFLLE1BQU0sRUFBRTtBQUM3QixhQUFNO0tBQ1A7O0FBRUQsUUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQTs7O0FBR3BELFFBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLENBQUMsRUFBRTtBQUMxQyxhQUFNO0tBQ1A7O0FBRUQsUUFBSSxVQUFVLENBQUMsY0FBYyxDQUFDLEVBQUU7QUFDOUIsYUFBTTtLQUNQOztBQUVELFFBQUksV0FBVyxDQUFDLDBCQUEwQixDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsRUFBRTtBQUM5RCxhQUFNO0tBQ1A7O0FBRUQsUUFBTSxJQUFJLEdBQUcsb0JBQW9CLENBQUMsU0FBUyxDQUFDLENBQUE7QUFDNUMsUUFBSSxJQUFJLElBQUksSUFBSSxLQUFLLEVBQUUsRUFBRTtBQUN2QixhQUFNO0tBQ1A7O0FBRUQsa0JBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7R0FDL0IsQ0FBQyxDQUFBOztBQUVGLFNBQU8sY0FBYyxDQUFBO0NBQ3RCLENBQUEiLCJmaWxlIjoiL2hvbWUvamVzdXMvLmF0b20vcGFja2FnZXMvbGludGVyLXN0eWxlbGludC9ub2RlX21vZHVsZXMvc3R5bGVsaW50L2xpYi91dGlscy9maW5kQW5pbWF0aW9uTmFtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cInVzZSBzdHJpY3RcIlxuXG5jb25zdCBrZXl3b3JkU2V0cyA9IHJlcXVpcmUoXCIuLi9yZWZlcmVuY2Uva2V5d29yZFNldHNcIilcbmNvbnN0IGdldFVuaXRGcm9tVmFsdWVOb2RlID0gcmVxdWlyZShcIi4vZ2V0VW5pdEZyb21WYWx1ZU5vZGVcIilcbmNvbnN0IGlzU3RhbmRhcmRTeW50YXhWYWx1ZSA9IHJlcXVpcmUoXCIuL2lzU3RhbmRhcmRTeW50YXhWYWx1ZVwiKVxuY29uc3QgaXNWYXJpYWJsZSA9IHJlcXVpcmUoXCIuL2lzVmFyaWFibGVcIilcbmNvbnN0IHBvc3Rjc3NWYWx1ZVBhcnNlciA9IHJlcXVpcmUoXCJwb3N0Y3NzLXZhbHVlLXBhcnNlclwiKVxuXG4vKipcbiAqIEdldCB0aGUgZm9udC1mYW1pbGllcyB3aXRoaW4gYSBgZm9udGAgc2hvcnRoYW5kIHByb3BlcnR5IHZhbHVlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZpbmRBbmltYXRpb25OYW1lKHZhbHVlLyo6IHN0cmluZyovKS8qOiBBcnJheTxPYmplY3Q+Ki8ge1xuICBjb25zdCBhbmltYXRpb25OYW1lcyA9IFtdXG5cbiAgY29uc3QgdmFsdWVOb2RlcyA9IHBvc3Rjc3NWYWx1ZVBhcnNlcih2YWx1ZSlcblxuICAvLyBIYW5kbGUgYGluaGVyaXRgLCBgaW5pdGlhbGAgYW5kIGV0Y1xuICBpZiAodmFsdWVOb2Rlcy5ub2Rlcy5sZW5ndGggPT09IDEgJiYga2V5d29yZFNldHMuYmFzaWNLZXl3b3Jkcy5oYXModmFsdWVOb2Rlcy5ub2Rlc1swXS52YWx1ZS50b0xvd2VyQ2FzZSgpKSkge1xuICAgIHJldHVybiBbdmFsdWVOb2Rlcy5ub2Rlc1swXV1cbiAgfVxuXG4gIHZhbHVlTm9kZXMud2Fsayh2YWx1ZU5vZGUgPT4ge1xuICAgIGlmICh2YWx1ZU5vZGUudHlwZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgaWYgKHZhbHVlTm9kZS50eXBlICE9PSBcIndvcmRcIikge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3QgdmFsdWVMb3dlckNhc2UgPSB2YWx1ZU5vZGUudmFsdWUudG9Mb3dlckNhc2UoKVxuXG4gICAgLy8gSWdub3JlIG5vbiBzdGFuZGFyZCBzeW50YXhcbiAgICBpZiAoIWlzU3RhbmRhcmRTeW50YXhWYWx1ZSh2YWx1ZUxvd2VyQ2FzZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICAvLyBJZ25vcmUgdmFyaWFibGVzXG4gICAgaWYgKGlzVmFyaWFibGUodmFsdWVMb3dlckNhc2UpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgLy8gSWdub3JlIGtleXdvcmRzIGZvciBvdGhlciBmb250IHBhcnRzXG4gICAgaWYgKGtleXdvcmRTZXRzLmFuaW1hdGlvblNob3J0aGFuZEtleXdvcmRzLmhhcyh2YWx1ZUxvd2VyQ2FzZSkpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICAvLyBJZ25vcmUgbnVtYmVycyB3aXRoIHVuaXRzXG4gICAgY29uc3QgdW5pdCA9IGdldFVuaXRGcm9tVmFsdWVOb2RlKHZhbHVlTm9kZSlcbiAgICBpZiAodW5pdCB8fCB1bml0ID09PSBcIlwiKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBhbmltYXRpb25OYW1lcy5wdXNoKHZhbHVlTm9kZSlcbiAgfSlcblxuICByZXR1cm4gYW5pbWF0aW9uTmFtZXNcbn1cbiJdfQ==