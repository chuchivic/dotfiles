
"use strict";

var _ = require("lodash");
var blurInterpolation = require("./blurInterpolation");
var isStandardSyntaxValue = require("./isStandardSyntaxValue");
var valueParser = require("postcss-value-parser");

/**
 * Get unit from value node
 *
 * Returns `null` if the unit is not found.
 */
module.exports = function (node /*: Object*/) /*: ?string*/{
  if (!node || node && !node.value) {
    return null;
  }

  var value = blurInterpolation(node.value, "")
  // ignore hack unit
  .replace("\\0", "").replace("\\9", "")
  // ignore decimal place
  .replace(".", "");

  if (node.type !== "word" || !isStandardSyntaxValue(value) || !_.isFinite(parseInt(value)) || node.value[0] === "#") {
    return null;
  }

  var parsedUnit = valueParser.unit(value);

  if (!parsedUnit) {
    return null;
  }

  return parsedUnit.unit;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvZ2V0VW5pdEZyb21WYWx1ZU5vZGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLFlBQVksQ0FBQzs7QUFFYixJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUIsSUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUN6RCxJQUFNLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBQ2pFLElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDOzs7Ozs7O0FBT3BELE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBUyxJQUFJLDRCQUE2QjtBQUN6RCxNQUFJLENBQUMsSUFBSSxJQUFLLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEFBQUMsRUFBRTtBQUNsQyxXQUFPLElBQUksQ0FBQztHQUNiOztBQUVELE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDOztHQUU1QyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUNsQixPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQzs7R0FFbEIsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQzs7QUFFcEIsTUFDRSxJQUFJLENBQUMsSUFBSSxLQUFLLE1BQU0sSUFDcEIsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsSUFDN0IsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsRUFDckI7QUFDQSxXQUFPLElBQUksQ0FBQztHQUNiOztBQUVELE1BQU0sVUFBVSxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRTNDLE1BQUksQ0FBQyxVQUFVLEVBQUU7QUFDZixXQUFPLElBQUksQ0FBQztHQUNiOztBQUVELFNBQU8sVUFBVSxDQUFDLElBQUksQ0FBQztDQUN4QixDQUFDIiwiZmlsZSI6Ii9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvZ2V0VW5pdEZyb21WYWx1ZU5vZGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmNvbnN0IF8gPSByZXF1aXJlKFwibG9kYXNoXCIpO1xuY29uc3QgYmx1ckludGVycG9sYXRpb24gPSByZXF1aXJlKFwiLi9ibHVySW50ZXJwb2xhdGlvblwiKTtcbmNvbnN0IGlzU3RhbmRhcmRTeW50YXhWYWx1ZSA9IHJlcXVpcmUoXCIuL2lzU3RhbmRhcmRTeW50YXhWYWx1ZVwiKTtcbmNvbnN0IHZhbHVlUGFyc2VyID0gcmVxdWlyZShcInBvc3Rjc3MtdmFsdWUtcGFyc2VyXCIpO1xuXG4vKipcbiAqIEdldCB1bml0IGZyb20gdmFsdWUgbm9kZVxuICpcbiAqIFJldHVybnMgYG51bGxgIGlmIHRoZSB1bml0IGlzIG5vdCBmb3VuZC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihub2RlIC8qOiBPYmplY3QqLykgLyo6ID9zdHJpbmcqLyB7XG4gIGlmICghbm9kZSB8fCAobm9kZSAmJiAhbm9kZS52YWx1ZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IHZhbHVlID0gYmx1ckludGVycG9sYXRpb24obm9kZS52YWx1ZSwgXCJcIilcbiAgICAvLyBpZ25vcmUgaGFjayB1bml0XG4gICAgLnJlcGxhY2UoXCJcXFxcMFwiLCBcIlwiKVxuICAgIC5yZXBsYWNlKFwiXFxcXDlcIiwgXCJcIilcbiAgICAvLyBpZ25vcmUgZGVjaW1hbCBwbGFjZVxuICAgIC5yZXBsYWNlKFwiLlwiLCBcIlwiKTtcblxuICBpZiAoXG4gICAgbm9kZS50eXBlICE9PSBcIndvcmRcIiB8fFxuICAgICFpc1N0YW5kYXJkU3ludGF4VmFsdWUodmFsdWUpIHx8XG4gICAgIV8uaXNGaW5pdGUocGFyc2VJbnQodmFsdWUpKSB8fFxuICAgIG5vZGUudmFsdWVbMF0gPT09IFwiI1wiXG4gICkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgcGFyc2VkVW5pdCA9IHZhbHVlUGFyc2VyLnVuaXQodmFsdWUpO1xuXG4gIGlmICghcGFyc2VkVW5pdCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlZFVuaXQudW5pdDtcbn07XG4iXX0=