
"use strict";

/**
 * Given an object of violation messages, return another
 * that provides the same messages postfixed with the rule
 * that has been violated.
 *
 * @param {string} ruleName
 * @param {object} messages - Object whose keys are message identifiers
 *   and values are either message strings or functions that return message strings
 * @return {object} New message object, whose messages will be marked with the rule name
 */
module.exports = function (ruleName, /*: string*/
messages /*: Object*/
) /*: Object*/{
  return Object.keys(messages).reduce(function (newMessages, messageId) {
    var messageText = messages[messageId];
    if (typeof messageText === "string") {
      newMessages[messageId] = messageText + " (" + ruleName + ")";
    } else {
      newMessages[messageId] = function () {
        return messageText.apply(null, arguments) + " (" + ruleName + ")";
      };
    }
    return newMessages;
  }, {});
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvcnVsZU1lc3NhZ2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxZQUFZLENBQUE7Ozs7Ozs7Ozs7OztBQVlaLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFDZixRQUFRO0FBQ1IsUUFBUTtjQUNJO0FBQ1osU0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFDLFdBQVcsRUFBRSxTQUFTLEVBQUs7QUFDOUQsUUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0FBQ3ZDLFFBQUksT0FBTyxXQUFXLEtBQUssUUFBUSxFQUFFO0FBQ25DLGlCQUFXLENBQUMsU0FBUyxDQUFDLEdBQU0sV0FBVyxVQUFLLFFBQVEsTUFBRyxDQUFBO0tBQ3hELE1BQU07QUFDTCxpQkFBVyxDQUFDLFNBQVMsQ0FBQyxHQUFHLFlBQVk7QUFDbkMsZUFBVSxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsVUFBSyxRQUFRLE9BQUc7T0FDN0QsQ0FBQTtLQUNGO0FBQ0QsV0FBTyxXQUFXLENBQUE7R0FDbkIsRUFBRSxFQUFFLENBQUMsQ0FBQTtDQUNQLENBQUEiLCJmaWxlIjoiL2hvbWUvamVzdXMvLmF0b20vcGFja2FnZXMvbGludGVyLXN0eWxlbGludC9ub2RlX21vZHVsZXMvc3R5bGVsaW50L2xpYi91dGlscy9ydWxlTWVzc2FnZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXCJ1c2Ugc3RyaWN0XCJcblxuLyoqXG4gKiBHaXZlbiBhbiBvYmplY3Qgb2YgdmlvbGF0aW9uIG1lc3NhZ2VzLCByZXR1cm4gYW5vdGhlclxuICogdGhhdCBwcm92aWRlcyB0aGUgc2FtZSBtZXNzYWdlcyBwb3N0Zml4ZWQgd2l0aCB0aGUgcnVsZVxuICogdGhhdCBoYXMgYmVlbiB2aW9sYXRlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcnVsZU5hbWVcbiAqIEBwYXJhbSB7b2JqZWN0fSBtZXNzYWdlcyAtIE9iamVjdCB3aG9zZSBrZXlzIGFyZSBtZXNzYWdlIGlkZW50aWZpZXJzXG4gKiAgIGFuZCB2YWx1ZXMgYXJlIGVpdGhlciBtZXNzYWdlIHN0cmluZ3Mgb3IgZnVuY3Rpb25zIHRoYXQgcmV0dXJuIG1lc3NhZ2Ugc3RyaW5nc1xuICogQHJldHVybiB7b2JqZWN0fSBOZXcgbWVzc2FnZSBvYmplY3QsIHdob3NlIG1lc3NhZ2VzIHdpbGwgYmUgbWFya2VkIHdpdGggdGhlIHJ1bGUgbmFtZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChcbiAgcnVsZU5hbWUvKjogc3RyaW5nKi8sXG4gIG1lc3NhZ2VzLyo6IE9iamVjdCovXG4pLyo6IE9iamVjdCovIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG1lc3NhZ2VzKS5yZWR1Y2UoKG5ld01lc3NhZ2VzLCBtZXNzYWdlSWQpID0+IHtcbiAgICBjb25zdCBtZXNzYWdlVGV4dCA9IG1lc3NhZ2VzW21lc3NhZ2VJZF1cbiAgICBpZiAodHlwZW9mIG1lc3NhZ2VUZXh0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBuZXdNZXNzYWdlc1ttZXNzYWdlSWRdID0gYCR7bWVzc2FnZVRleHR9ICgke3J1bGVOYW1lfSlgXG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld01lc3NhZ2VzW21lc3NhZ2VJZF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBgJHttZXNzYWdlVGV4dC5hcHBseShudWxsLCBhcmd1bWVudHMpfSAoJHtydWxlTmFtZX0pYFxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3TWVzc2FnZXNcbiAgfSwge30pXG59XG4iXX0=