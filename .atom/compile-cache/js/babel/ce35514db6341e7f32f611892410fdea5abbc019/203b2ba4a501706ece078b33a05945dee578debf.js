
"use strict";
var micromatch = require("micromatch");
var path = require("path");

// To find out if a path is ignored, we need to load the config,
// which may have an ignoreFiles property. We then check the path
// against these.
module.exports = function (stylelint, /*: stylelint$internalApi*/
filePathArg /*:: ?: string*/
) /*: Promise<boolean>*/{
  var filePath = filePathArg; // to please Flow
  if (!filePath) {
    return Promise.resolve(false);
  }

  return stylelint.getConfigForFile(filePath).then(function (result) {
    var config = result.config;
    var absoluteFilePath = path.isAbsolute(filePath) ? filePath : path.resolve(process.cwd(), filePath);
    if (micromatch(absoluteFilePath, config.ignoreFiles).length) {
      return true;
    }
    return false;
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvaXNQYXRoSWdub3JlZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsWUFBWSxDQUFDO0FBQ2IsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3pDLElBQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQzs7Ozs7QUFLN0IsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUNmLFNBQVM7QUFDVCxXQUFXO3dCQUNZO0FBQ3ZCLE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBQztBQUM3QixNQUFJLENBQUMsUUFBUSxFQUFFO0FBQ2IsV0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0dBQy9COztBQUVELFNBQU8sU0FBUyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLE1BQU0sRUFBSTtBQUN6RCxRQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzdCLFFBQU0sZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsR0FDOUMsUUFBUSxHQUNSLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQzFDLFFBQUksVUFBVSxDQUFDLGdCQUFnQixFQUFFLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEVBQUU7QUFDM0QsYUFBTyxJQUFJLENBQUM7S0FDYjtBQUNELFdBQU8sS0FBSyxDQUFDO0dBQ2QsQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvaG9tZS9qZXN1cy8uYXRvbS9wYWNrYWdlcy9saW50ZXItc3R5bGVsaW50L25vZGVfbW9kdWxlcy9zdHlsZWxpbnQvbGliL2lzUGF0aElnbm9yZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCBtaWNyb21hdGNoID0gcmVxdWlyZShcIm1pY3JvbWF0Y2hcIik7XG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XG5cbi8vIFRvIGZpbmQgb3V0IGlmIGEgcGF0aCBpcyBpZ25vcmVkLCB3ZSBuZWVkIHRvIGxvYWQgdGhlIGNvbmZpZyxcbi8vIHdoaWNoIG1heSBoYXZlIGFuIGlnbm9yZUZpbGVzIHByb3BlcnR5LiBXZSB0aGVuIGNoZWNrIHRoZSBwYXRoXG4vLyBhZ2FpbnN0IHRoZXNlLlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihcbiAgc3R5bGVsaW50IC8qOiBzdHlsZWxpbnQkaW50ZXJuYWxBcGkqLyxcbiAgZmlsZVBhdGhBcmcgLyo6OiA/OiBzdHJpbmcqL1xuKSAvKjogUHJvbWlzZTxib29sZWFuPiovIHtcbiAgY29uc3QgZmlsZVBhdGggPSBmaWxlUGF0aEFyZzsgLy8gdG8gcGxlYXNlIEZsb3dcbiAgaWYgKCFmaWxlUGF0aCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZmFsc2UpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlbGludC5nZXRDb25maWdGb3JGaWxlKGZpbGVQYXRoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgY29uc3QgY29uZmlnID0gcmVzdWx0LmNvbmZpZztcbiAgICBjb25zdCBhYnNvbHV0ZUZpbGVQYXRoID0gcGF0aC5pc0Fic29sdXRlKGZpbGVQYXRoKVxuICAgICAgPyBmaWxlUGF0aFxuICAgICAgOiBwYXRoLnJlc29sdmUocHJvY2Vzcy5jd2QoKSwgZmlsZVBhdGgpO1xuICAgIGlmIChtaWNyb21hdGNoKGFic29sdXRlRmlsZVBhdGgsIGNvbmZpZy5pZ25vcmVGaWxlcykubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KTtcbn07XG4iXX0=