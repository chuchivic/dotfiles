
"use strict";

/**
 * Given an object of violation messages, return another
 * that provides the same messages postfixed with the rule
 * that has been violated.
 *
 * @param {string} ruleName
 * @param {object} messages - Object whose keys are message identifiers
 *   and values are either message strings or functions that return message strings
 * @return {object} New message object, whose messages will be marked with the rule name
 */
module.exports = function (ruleName, /*: string*/
messages /*: Object*/
) /*: Object*/{
  return Object.keys(messages).reduce(function (newMessages, messageId) {
    var messageText = messages[messageId];
    if (typeof messageText === "string") {
      newMessages[messageId] = messageText + " (" + ruleName + ")";
    } else {
      newMessages[messageId] = function () {
        return messageText.apply(null, arguments) + " (" + ruleName + ")";
      };
    }
    return newMessages;
  }, {});
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2plc3VzLy5hdG9tL3BhY2thZ2VzL2xpbnRlci1zdHlsZWxpbnQvbm9kZV9tb2R1bGVzL3N0eWxlbGludC9saWIvdXRpbHMvcnVsZU1lc3NhZ2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxZQUFZLENBQUM7Ozs7Ozs7Ozs7OztBQVliLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFDZixRQUFRO0FBQ1IsUUFBUTtjQUNLO0FBQ2IsU0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFDLFdBQVcsRUFBRSxTQUFTLEVBQUs7QUFDOUQsUUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3hDLFFBQUksT0FBTyxXQUFXLEtBQUssUUFBUSxFQUFFO0FBQ25DLGlCQUFXLENBQUMsU0FBUyxDQUFDLEdBQU0sV0FBVyxVQUFLLFFBQVEsTUFBRyxDQUFDO0tBQ3pELE1BQU07QUFDTCxpQkFBVyxDQUFDLFNBQVMsQ0FBQyxHQUFHLFlBQVc7QUFDbEMsZUFBVSxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsVUFBSyxRQUFRLE9BQUk7T0FDOUQsQ0FBQztLQUNIO0FBQ0QsV0FBTyxXQUFXLENBQUM7R0FDcEIsRUFBRSxFQUFFLENBQUMsQ0FBQztDQUNSLENBQUMiLCJmaWxlIjoiL2hvbWUvamVzdXMvLmF0b20vcGFja2FnZXMvbGludGVyLXN0eWxlbGludC9ub2RlX21vZHVsZXMvc3R5bGVsaW50L2xpYi91dGlscy9ydWxlTWVzc2FnZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogR2l2ZW4gYW4gb2JqZWN0IG9mIHZpb2xhdGlvbiBtZXNzYWdlcywgcmV0dXJuIGFub3RoZXJcbiAqIHRoYXQgcHJvdmlkZXMgdGhlIHNhbWUgbWVzc2FnZXMgcG9zdGZpeGVkIHdpdGggdGhlIHJ1bGVcbiAqIHRoYXQgaGFzIGJlZW4gdmlvbGF0ZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHJ1bGVOYW1lXG4gKiBAcGFyYW0ge29iamVjdH0gbWVzc2FnZXMgLSBPYmplY3Qgd2hvc2Uga2V5cyBhcmUgbWVzc2FnZSBpZGVudGlmaWVyc1xuICogICBhbmQgdmFsdWVzIGFyZSBlaXRoZXIgbWVzc2FnZSBzdHJpbmdzIG9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBtZXNzYWdlIHN0cmluZ3NcbiAqIEByZXR1cm4ge29iamVjdH0gTmV3IG1lc3NhZ2Ugb2JqZWN0LCB3aG9zZSBtZXNzYWdlcyB3aWxsIGJlIG1hcmtlZCB3aXRoIHRoZSBydWxlIG5hbWVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihcbiAgcnVsZU5hbWUgLyo6IHN0cmluZyovLFxuICBtZXNzYWdlcyAvKjogT2JqZWN0Ki9cbikgLyo6IE9iamVjdCovIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG1lc3NhZ2VzKS5yZWR1Y2UoKG5ld01lc3NhZ2VzLCBtZXNzYWdlSWQpID0+IHtcbiAgICBjb25zdCBtZXNzYWdlVGV4dCA9IG1lc3NhZ2VzW21lc3NhZ2VJZF07XG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlVGV4dCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbmV3TWVzc2FnZXNbbWVzc2FnZUlkXSA9IGAke21lc3NhZ2VUZXh0fSAoJHtydWxlTmFtZX0pYDtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3TWVzc2FnZXNbbWVzc2FnZUlkXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYCR7bWVzc2FnZVRleHQuYXBwbHkobnVsbCwgYXJndW1lbnRzKX0gKCR7cnVsZU5hbWV9KWA7XG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gbmV3TWVzc2FnZXM7XG4gIH0sIHt9KTtcbn07XG4iXX0=